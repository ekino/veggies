{
  "version": 3,
  "sources": ["../../../../src/extensions/state/state.js"],
  "sourcesContent": ["'use strict'\n\nimport { setValue, getValue, template, isPlainObject, mapValues } from '../../utils/index.js'\n\n/**\n * @module extensions/state/State\n */\n\n/**\n * State extension.\n *\n * @class\n */\nclass State {\n    constructor() {\n        /**\n         * World state\n         * @type {Object}\n         */\n        this.state = {}\n    }\n\n    /**\n     * Sets value for given key.\n     *\n     * @param {string} key   - The key you wish to set a value for\n     * @param {*}      value - The value\n     */\n    set(key, value) {\n        return setValue(this.state, key, value)\n    }\n\n    /**\n     * Retrieves a value for given key.\n     *\n     * @param {string} key - The key you wish to retrieve a value for\n     * @return {*}\n     */\n    get(key) {\n        return getValue(this.state, key)\n    }\n\n    /**\n     * Clear the state\n     */\n    clear() {\n        this.state = {}\n    }\n\n    /**\n     * Dump state content\n     * @return {Object|{}|*}\n     */\n    dump() {\n        return this.state\n    }\n\n    populate(value) {\n        return template(value, { interpolate: /{{([\\s\\S]+?)}}/g })(this.state)\n    }\n\n    populateObject(object) {\n        return mapValues(object, (value) => {\n            if (isPlainObject(value)) return this.populateObject(value)\n            return this.populate(value)\n        })\n    }\n}\n\n/**\n * Create a new isolated state\n * @return {State}\n */\nexport default function (...args) {\n    return new State(...args)\n}\n\n/**\n * State extension.\n * @type {State}\n */\nexport { State }\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,mBAAuE;AAWvE,MAAM,MAAM;AAAA,EACR,cAAc;AAKV,SAAK,QAAQ,CAAC;AAAA,EAClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,IAAI,KAAK,OAAO;AACZ,eAAO,uBAAS,KAAK,OAAO,KAAK,KAAK;AAAA,EAC1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,IAAI,KAAK;AACL,eAAO,uBAAS,KAAK,OAAO,GAAG;AAAA,EACnC;AAAA;AAAA;AAAA;AAAA,EAKA,QAAQ;AACJ,SAAK,QAAQ,CAAC;AAAA,EAClB;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAO;AACH,WAAO,KAAK;AAAA,EAChB;AAAA,EAEA,SAAS,OAAO;AACZ,eAAO,uBAAS,OAAO,EAAE,aAAa,kBAAkB,CAAC,EAAE,KAAK,KAAK;AAAA,EACzE;AAAA,EAEA,eAAe,QAAQ;AACnB,eAAO,wBAAU,QAAQ,CAAC,UAAU;AAChC,cAAI,4BAAc,KAAK,EAAG,QAAO,KAAK,eAAe,KAAK;AAC1D,aAAO,KAAK,SAAS,KAAK;AAAA,IAC9B,CAAC;AAAA,EACL;AACJ;AAMe,SAAR,iBAAqB,MAAM;AAC9B,SAAO,IAAI,MAAM,GAAG,IAAI;AAC5B;",
  "names": []
}
