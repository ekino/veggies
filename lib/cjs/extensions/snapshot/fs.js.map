{
  "version": 3,
  "sources": ["../../../../src/extensions/snapshot/fs.js"],
  "sourcesContent": ["'use strict'\n\n/**\n * The FileSystem helper used by the FileSystem extension.\n *\n * @module extensions/snapshot/FileSystem\n */\n\nimport path from 'node:path'\nimport fs from 'node:fs'\n\n/**\n * Loads file content.\n *\n * @param {string} file              - File path\n * @param {string} [encoding='utf8'] - Content encoding\n * @return {string} File content\n */\nexport const getFileContent = (file, encoding = 'utf8') => {\n    const data = fs.readFileSync(file)\n    return data.toString(encoding)\n}\n\n/**\n *\n * @param {string} file                             - File path\n * @param {string} content                          - Content to write in the file\n * @param {object} [options]                        - Options\n * @param {boolean} [options.createDir = true]      - Create path dir if it doesn't exists\n */\nexport const writeFileContent = (file, content, { createDir = true } = {}) => {\n    if (createDir) createDirectory(path.dirname(file))\n    return fs.writeFileSync(file, content)\n}\n\n/**\n * Gets info about file/directory.\n *\n * @param {string} file - File path\n * @return {fs.Stat|null} File/directory info or null if file/directory does not exist\n */\nexport const getFileInfo = (file) => {\n    let result = null\n    try {\n        result = fs.statSync(file)\n    } catch (err) {\n        if (err.code !== 'ENOENT') throw err\n    }\n\n    return result\n}\n\n/**\n * Creates a directory.\n *\n * @param {string} dir - directory path\n * @return {boolean}\n */\nexport const createDirectory = (dir) => {\n    return fs.mkdirSync(dir, { recursive: true })\n}\n\n/**\n * Removes a file or directory.\n *\n * @param {string} fileOrDirectory - File or directory path\n * @return {boolean}\n */\nexport const remove = (fileOrDir) => {\n    return fs.rmSync(fileOrDir, { recursive: true, force: true })\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,uBAAiB;AACjB,qBAAe;AASR,MAAM,iBAAiB,CAAC,MAAM,WAAW,WAAW;AACvD,QAAM,OAAO,eAAAA,QAAG,aAAa,IAAI;AACjC,SAAO,KAAK,SAAS,QAAQ;AACjC;AASO,MAAM,mBAAmB,CAAC,MAAM,SAAS,EAAE,YAAY,KAAK,IAAI,CAAC,MAAM;AAC1E,MAAI,UAAW,iBAAgB,iBAAAC,QAAK,QAAQ,IAAI,CAAC;AACjD,SAAO,eAAAD,QAAG,cAAc,MAAM,OAAO;AACzC;AAQO,MAAM,cAAc,CAAC,SAAS;AACjC,MAAI,SAAS;AACb,MAAI;AACA,aAAS,eAAAA,QAAG,SAAS,IAAI;AAAA,EAC7B,SAAS,KAAK;AACV,QAAI,IAAI,SAAS,SAAU,OAAM;AAAA,EACrC;AAEA,SAAO;AACX;AAQO,MAAM,kBAAkB,CAAC,QAAQ;AACpC,SAAO,eAAAA,QAAG,UAAU,KAAK,EAAE,WAAW,KAAK,CAAC;AAChD;AAQO,MAAM,SAAS,CAAC,cAAc;AACjC,SAAO,eAAAA,QAAG,OAAO,WAAW,EAAE,WAAW,MAAM,OAAO,KAAK,CAAC;AAChE;",
  "names": ["fs", "path"]
}
